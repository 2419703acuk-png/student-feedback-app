rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isValidFeedback() {
      return request.resource.data.keys().hasAll([
        'module', 'course', 'lecturer', 'rating', 'questionAnswers', 
        'comment', 'submitAnonymously', 'userId', 'timestamp', 'status'
      ]) &&
      request.resource.data.rating is number &&
      request.resource.data.rating >= 1 &&
      request.resource.data.rating <= 5 &&
      request.resource.data.submitAnonymously is bool &&
      request.resource.data.status == 'submitted';
    }
    
    // Feedback collection rules
    match /feedbacks/{feedbackId} {
      // Users can read their own feedback or anonymous feedback
      allow read: if isAuthenticated() && 
        (isOwner(resource.data.userId) || 
         resource.data.submitAnonymously == true);
      
      // Users can create feedback with validation
      allow create: if isAuthenticated() && 
        isOwner(request.resource.data.userId) &&
        isValidFeedback();
      
      // No updates or deletes allowed after submission
      allow update, delete: if false;
    }
    
    // User profiles collection
    match /users/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Course/module data (read-only for authenticated users)
    match /courses/{courseId} {
      allow read: if isAuthenticated();
      allow write: if false; // Only admins should modify course data
    }
    
    match /modules/{moduleId} {
      allow read: if isAuthenticated();
      allow write: if false; // Only admins should modify module data
    }
    
    match /lecturers/{lecturerId} {
      allow read: if isAuthenticated();
      allow write: if false; // Only admins should modify lecturer data
    }
    
    // Admin collection (for future admin features)
    match /admin/{document=**} {
      allow read, write: if false; // Will be configured separately for admin access
    }
    
    // Deny access to all other collections by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
